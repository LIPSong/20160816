面向对象编程
	类、对象概念：
		1.类 抽象出一个事物的共同特征和行为
		2.对象 将抽象的事物 具体化 是一个真实存在的东西
		3.对象是一个无序的复合类型 
	创建对象的方式：
		1.键值对
		2.function
	this
	new
	prototype
	Array、Boolean、String、Number
	Date
		Date()	返回当日的日期和时间。
		getDate()	从 Date 对象返回一个月中的某一天 (1 ~ 31)。
		getDay()	从 Date 对象返回一周中的某一天 (0 ~ 6)。
		getMonth()	从 Date 对象返回月份 (0 ~ 11)。
		getFullYear()	从 Date 对象以四位数字返回年份。
		getHours()	返回 Date 对象的小时 (0 ~ 23)。
		getMinutes()	返回 Date 对象的分钟 (0 ~ 59)。
		getSeconds()	返回 Date 对象的秒数 (0 ~ 59)。
		getMilliseconds()	返回 Date 对象的毫秒(0 ~ 999)。
		getTime()	返回 1970 年 1 月 1 日至今的毫秒数。
		getTimezoneOffset()	返回本地时间与格林威治标准时间 (GMT) 的分钟差。
		getUTCDate()	根据世界时从 Date 对象返回月中的一天 (1 ~ 31)。
		getUTCDay()	UTC(Coordinated Universal Time)根据世界时从 Date 对象返回周中的一天 (0 ~ 6)。
		getUTCMonth()	根据世界时从 Date 对象返回月份 (0 ~ 11)。
		getUTCFullYear()	根据世界时从 Date 对象返回四位数的年份。
		getUTCHours()	根据世界时返回 Date 对象的小时 (0 ~ 23)。
		getUTCMinutes()	根据世界时返回 Date 对象的分钟 (0 ~ 59)。
		getUTCSeconds()	根据世界时返回 Date 对象的秒钟 (0 ~ 59)。
		getUTCMilliseconds()	根据世界时返回 Date 对象的毫秒(0 ~ 999)。
		parse()	返回1970年1月1日午夜到指定日期（字符串）的毫秒数。
		setDate()	设置 Date 对象中月的某一天 (1 ~ 31)。
		setMonth()	设置 Date 对象中月份 (0 ~ 11)。
		setFullYear()	设置 Date 对象中的年份（四位数字）。
		setYear()	请使用 setFullYear() 方法代替。
		setHours()	设置 Date 对象中的小时 (0 ~ 23)。
		setMinutes()	设置 Date 对象中的分钟 (0 ~ 59)。
		setSeconds()	设置 Date 对象中的秒钟 (0 ~ 59)。
		setMilliseconds()	设置 Date 对象中的毫秒 (0 ~ 999)。
		setTime()	以毫秒设置 Date 对象。
		setUTCDate()	根据世界时设置 Date 对象中月份的一天 (1 ~ 31)。
		setUTCMonth()	根据世界时设置 Date 对象中的月份 (0 ~ 11)。
		setUTCFullYear()	根据世界时设置 Date 对象中的年份（四位数字）。
		setUTCHours()	根据世界时设置 Date 对象中的小时 (0 ~ 23)。
		setUTCMinutes()	根据世界时设置 Date 对象中的分钟 (0 ~ 59)。
		setUTCSeconds()	根据世界时设置 Date 对象中的秒钟 (0 ~ 59)。
		setUTCMilliseconds()	根据世界时设置 Date 对象中的毫秒 (0 ~ 999)。
		toString()	把 Date 对象转换为字符串。
		toTimeString()	把 Date 对象的时间部分转换为字符串。
		toDateString()	把 Date 对象的日期部分转换为字符串。
		toUTCString()	根据世界时，把 Date 对象转换为字符串。
		toLocaleString()	根据本地时间格式，把 Date 对象转换为字符串。
		toLocaleTimeString()	根据本地时间格式，把 Date 对象的时间部分转换为字符串。
		toLocaleDateString()	根据本地时间格式，把 Date 对象的日期部分转换为字符串。
		UTC()	根据世界时返回 1970 年 1 月 1 日 到指定日期的毫秒数。
		valueOf()	返回 Date 对象的原始值。
	Math
		abs(x)	返回数的绝对值。
		acos(x)	返回数的反余弦值。
		asin(x)	返回数的反正弦值。
		atan(x)	以介于 -PI/2 与 PI/2 弧度之间的数值来返回 x 的反正切值。
		atan2(y,x)	返回从 x 轴到点 (x,y) 的角度（介于 -PI/2 与 PI/2 弧度之间）。
		ceil(x)	对数进行上舍入。
		cos(x)	返回数的余弦。
		exp(x)	返回 e 的指数。
		floor(x)	对数进行下舍入。
		log(x)	返回数的自然对数（底为e）。
		max(x,y)	返回 x 和 y 中的最高值。
		min(x,y)	返回 x 和 y 中的最低值。
		pow(x,y)	返回 x 的 y 次幂。
		random()	返回 0 ~ 1 之间的随机数。
		round(x)	把数四舍五入为最接近的整数。
		sin(x)	返回数的正弦。
		sqrt(x)	返回数的平方根。
		tan(x)	返回角的正切。
	RegExp
		new RegExp(pattern, attributes);
		attributes
			i	执行对大小写不敏感的匹配。
			g	执行全局匹配（查找所有匹配而非在找到第一个匹配后停止）。
			m	执行多行匹配。
		方括号用于查找某个范围内的字符：
			[abc]	查找方括号之间的任何字符。
			[^abc]	查找任何不在方括号之间的字符。
			[0-9]	查找任何从 0 至 9 的数字。
			[a-z]	查找任何从小写 a 到小写 z 的字符。
			[A-Z]	查找任何从大写 A 到大写 Z 的字符。
			[A-z]	查找任何从大写 A 到小写 z 的字符。
			[adgk]	查找给定集合内的任何字符。
			[^adgk]	查找给定集合外的任何字符。
			(red|blue|green)	查找任何指定的选项。
		元字符（Metacharacter）是拥有特殊含义的字符：
			.	查找单个字符，除了换行和行结束符。
			\w	查找单词字符。
			\W	查找非单词字符。
			\d	查找数字。
			\D	查找非数字字符。
			\s	查找空白字符。
			\S	查找非空白字符。
			\b	匹配单词边界。
			\B	匹配非单词边界。
			\0	查找 NUL 字符。
			\n	查找换行符。
			\f	查找换页符。
			\r	查找回车符。
			\t	查找制表符。
			\v	查找垂直制表符。
			\xxx	查找以八进制数 xxx 规定的字符。
			\xdd	查找以十六进制数 dd 规定的字符。
			\uxxxx	查找以十六进制数 xxxx 规定的 Unicode 字符。
		量词	
			n+	匹配任何包含至少一个 n 的字符串。
			n*	匹配任何包含零个或多个 n 的字符串。
			n?	匹配任何包含零个或一个 n 的字符串。
			n{X}	匹配包含 X 个 n 的序列的字符串。
			n{X,Y}	匹配包含 X 或 Y 个 n 的序列的字符串。
			n{X,}	匹配包含至少 X 个 n 的序列的字符串。
			n$	匹配任何结尾为 n 的字符串。
			^n	匹配任何开头为 n 的字符串。
			?=n	匹配任何其后紧接指定字符串 n 的字符串。
			?!n	匹配任何其后没有紧接指定字符串 n 的字符串。
		字符串支持正则的方法
			search	检索与正则表达式相匹配的值
			match	找到一个或多个正则表达式的匹配。
			replace	替换与正则表达式匹配的子串。	
			split	把字符串分割为字符串数组。
	Bom
		Window
		Navigator
		Screen
		History
		Location
	Dom
		DOM Document
		DOM Element
		DOM Attribute
		DOM Event
	HTML
	
面向对象-NO.4 多态
	原型链：prototype 的层级关系 
	面向对象的三大特征
		封装
		继承
		多态
	多文件定义js文件名的规范
		1.最开始的JS文件 一般会把他的名字 写成main (其他语言都会有一个叫main的入口函数)
		2.其他的js文件 文件名首字母 尽量大写 并且名字尽量与文件里面的内容相符
		3.在导入js文件的时候 如果涉及到先后顺序 必须按照 文件引用的关系 去导入（main.js 中用到了Monster.js 
		就得先导入Monster.js再导入main.js）

	多文件：解决全局变量污染
		问题：多文件的时候  如果定义全局变量  名字相同 会污染其他文件与他名字相同的变量
		解决：可以使用闭包解决
		(function () {   
		})();

	多态
		多态：同一个方法  可以有不同实现
		JS的函数重载 js中不支持重载
		多态是函数的重载 JS函数不支持多态 

		多态与继承是有关系的

		实现多态 通过改变__proto__指向的类来实现多态
	

Dom
	DOM Document
		document.body	返回文档的body元素
		document.createElement()创建元素节点
		document.createAttribute()	
		document.setAttributeNode()
			创建一个属性节点
			var att = document.createAttribute("属性名");
			att.value = "bg";
			div.setAttributeNode(att);
		document.createTextNode()	创建文本节点。
		document.getElementById()	使用ID获得节点
		document.getElementsByName()	通过name名字找到对应对象集合
		document.getElementsByTagName()	通过标签名的找到对应对象集合
		document. getElementsByClassName() 得到类名是什么 的所有节点
		document.addEventListener(事件的名称,坚监听者（function）) 添加监听事件
		document.write("字符串")
		document.writeln("字符串")	等同于 write() 方法，不同的是在每个表达式之后写一个换行符。
	DOM Element
		element.addEventListener()	添加监听事件
		element.appendChild()	为元素添加一个新的子元素
		element.attributes	获得元素属性数组
		element.childNodes	获得元素的一个子节点的数组
		element.className	设置或返回元素的class属性
		element.getAttribute()	返回指定元素的属性值
		element.getAttributeNode()	返回指定属性节点
		element.getElementsByTagName()	返回指定标签名的所有子元素集合。
		element. getElementsByClassName()	返回文档中所有指定类名的元素集合，作为 NodeList 对象。
		element.id	设置或者返回元素的 id。
		element.innerHTML	插入HTML代码
		element.innerText
		element.textContent	设置或返回一个节点和它的文本内容
----------------------------------------


		element.cloneNode()	克隆某个元素
		element.firstChild	返回元素的第一个子节点
		element.focus()	设置文档或元素获取焦点
		
		element.hasAttribute()	如果元素中存在指定的属性返回 true，否则返回false。
		element.hasAttributes()	如果元素有任何属性返回true，否则返回false。
		element.hasChildNodes()	返回一个元素是否具有任何子元素
		element.hasfocus()	返回布尔值，检测文档或元素是否获取焦点
		
		element.insertBefore()	现有的子元素之前插入一个新的子元素
		element.isContentEditable	如果元素内容可编辑返回 true，否则返回false
		element.lastChild	返回的最后一个子元素
		element.nodeType	返回元素的节点类型
		element.nodeValue	返回元素的节点值
		element.parentNode	返回元素的父节点
		element.removeAttribute()	从元素中删除指定的属性
		element.removeAttributeNode()	删除指定属性节点并返回移除后的节点。
		element.removeChild()	删除一个子元素
		element.removeEventListener()	移除由 addEventListener() 方法添加的事件句柄
		element.replaceChild()	替换一个子元素
		element.scrollHeight	返回整个元素的高度（包括带滚动条的隐蔽的地方）
		element.scrollLeft	返回当前视图中的实际元素的左边缘和左边缘之间的距离
		element.scrollTop	返回当前视图中的实际元素的顶部边缘和顶部边缘之间的距离
		element.scrollWidth	返回元素的整个宽度（包括带滚动条的隐蔽的地方）
		element.setAttribute()	设置或者改变指定属性并指定值。
		element.setAttributeNode()	设置或者改变指定属性节点。
		element.textContent	设置或返回一个节点和它的文本内容
	DOM Attribute
		attr.name	返回属性名称
		attr.value	设置或者返回属性值
		nodemap.getNamedItem()	从节点列表中返回的指定属性节点。
			btn.attributes.getNamedItem("onclick").textContent;
		nodemap.item()	返回节点列表中处于指定索引号的节点
		nodemap.removeNamedItem()	删除指定属性节点
		nodemap.setNamedItem()	设置指定属性节点(通过名称)
	DOM Event
		鼠标
			onclick	当用户点击某个对象时调用的事件句柄。click
			ondblclick	当用户双击某个对象时调用的事件句柄。	
			onmousedown	鼠标按钮被按下。	
			onmouseenter	当鼠标指针移动到元素上时触发。	
			onmouseleave	当鼠标指针移出元素时触发	
			onmousemove	鼠标被移动。	
			onmouseover	鼠标移到某元素之上。
			onmouseout	鼠标从某元素移开。	
			onmouseup	鼠标按键被松开。
		键盘
			onkeydown	某个键盘按键被按下。
			onkeypress	某个键盘按键被按下并松开。	
			onkeyup	某个键盘按键被松开。

作业：
	1.把昨天作业重写一遍（多文件）继承的方法 可以封装成一个文件
	2.（可选做）实现小游戏 猜颜色 如图
	3.石头剪子布
	4.界面布局

	